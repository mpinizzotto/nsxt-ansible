---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: NSX-T Overlay Transport Zone
      nsxt_transport_zone:
        display_name: "{{ hostvars['localhost'].overlay_tz_name }}"
        description: "Ansible created TZ for Overlay Traffic"
        host_switch_name: "{{ hostvars['localhost'].overlay_hostswitch }}"
        transport_type: 'OVERLAY'
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: overlay_tzone

    - name: NSX-T VLAN Transport Zone
      nsxt_transport_zone:
        display_name: "{{ hostvars['localhost'].vlan_tz_name }}"
        description: "Ansible created TZ for VLAN Traffic"
        host_switch_name: "{{ hostvars['localhost'].vlan_hostswitch }}"
        transport_type: 'VLAN'
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: vlan_tzone

    - name: NSX-T TEP IP Pool
      nsxt_ip_pool:
        display_name: "{{ hostvars['localhost'].tep_pool_name }}"
        description: "IP Pool for GENEVE Overlay Traffic"
        subnets:
          - cidr: "{{ hostvars['localhost'].tep_pool_cidr }}"
            allocation_ranges:
              - "{{ hostvars['localhost'].tep_pool_range }}"
            dns_nameservers:
              - "{{ hostvars['localhost'].tep_pool_nameserver }}"
            dns_suffix: "{{ hostvars['localhost'].tep_pool_suffix }}"
            gateway_ip: "{{ hostvars['localhost'].tep_pool_gw }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: tepippool

    - name: Single Uplink Profile
      nsxt_uplink_profile:
        display_name: "{{ hostvars['localhost'].edge_single_uplink_profile_name }}"
        description: "Edge Uplink Profile"
        mtu: "{{ hostvars['localhost'].edge_single_uplink_profile_mtu }}"
        active_list:
          - uplink-1
        policy: "FAILOVER_ORDER"
        transport_vlan: "{{ hostvars['localhost'].edge_single_uplink_profile_vlan }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: single_uplink_prof

    - name: Host Overlay Profile
      nsxt_uplink_profile:
        display_name: "{{ hostvars['localhost'].esxi_overlay_profile_name }}"
        description: "Host Overlay Profile"
        mtu: "{{ hostvars['localhost'].esxi_overlay_profile_mtu }}"
        active_list:
          - uplink-1
        policy: "FAILOVER_ORDER"
        transport_vlan: "{{ hostvars['localhost'].esxi_overlay_profile_vlan }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: host_overlay_prof

    - name: NSX-T Edge Transport Node
      nsxt_transport_node:
        display_name: "{{ item }}"
        node_name: "{{ item }}"
        static_ip_pool_id: "{{ tepippool.id }}"
        host_switch_name:
          - "{{ hostvars['localhost'].overlay_hostswitch }}"
          - "{{ hostvars['localhost'].vlan_hostswitch }}"
        transport_zone_endpoints:
          - "{{ hostvars['localhost'].overlay_tz_name }}"
          - "{{ hostvars['localhost'].vlan_tz_name }}"
        pnics: "{{ edge_uplink_vmnics }}"
        uplink_profile: "{{ hostvars['localhost'].edge_single_uplink_profile_name }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      with_items: "{{ groups['nsxedges'] }}"
      register: edgetnode


    - name: NSX-T Edge Cluster
      nsxt_edge_cluster:
        display_name: "{{ hostvars['localhost'].edge_cluster }}"
        description: "Default Edge Cluster"
        members: "{{ groups['nsxedges'] }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: edge_cluster

    - name: NSX-T T0 Logical Router
      nsxt_t0_logical_router:
        display_name: "{{t0_router.name}}"
        description: "Default T0 Router {{t0_router.name}}"
        edge_cluster_id: "{{ edge_cluster.id }}"
        high_availability_mode: "{{ t0_router.ha_mode }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t0

    - name: NSX-T VLAN Uplink Switch
      nsxt_logical_switch:
        display_name: "vlan-uplink-switch"
        description: "VLAN Uplink Switch"
        transport_zone_id: "{{ vlan_tzone.id }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        vlan: 0
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: vlanupls

    - name: NSX-T VLAN Uplink Logical Switch Port
      nsxt_logical_switch_port:
        display_name: "vlan-uplink-switch-port"
        description: "VLAN Logical Switch Port"
        logical_switch_id: "{{ vlanupls.id }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: vlanuplsp

    - name: NSX-T T0 Uplink
      nsxt_t0_uplink:
        display_name: "{{t0_router.name}}-t0-uplink"
        description: "{{t0_router.name}} T0 Uplink"
        edge_cluster_member: "{{t0_router.edge_name}}"
        urpf: 'NONE'
        t0_router: "{{t0_router.name}}"
        logical_switch_port_id: "{{vlanuplsp.id}}"
        ip_address: "{{t0_router.subnet}}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: "admin"
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t0uplink

    - name: NSX-T T0 Static route
      nsxt_static_route:
        description: "NSX-T {{ t0_router.name}} Static route"
        network: "{{t0_router.static_route.network}}"
        next_hops:
        - "{{ t0_router.static_route.next_hop }}"
        admin_distance: "{{t0_router.static_route.admin_distance}}"
        router_name: "{{t0_router.name}}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: "admin"
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t0_static_route

- name: Get ESX nodes information
  hosts: nsxtransportnodes
  gather_facts: True
  tasks:
    - name: Get SHA-256 SSL thumbprint
      command: openssl x509 -in /etc/vmware/ssl/rui.crt -fingerprint -sha256 -noout
      when:
        - ansible_distribution == "VMkernel"
      register: thumb
    - name: Set ssl thumbprint fact
      set_fact:
        sslthumb: "{{ thumb.stdout|regex_findall('Fingerprint=(.*)') }}"
      when:
        - ansible_distribution == "VMkernel"

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: NSX-T Fabric Node
      nsxt_fabric_node:
        display_name: "{{ item }}"
        ip_address: "{{ hostvars[item].ansible_ssh_host }}"
        node_username: "{{ hostvars[item].ansible_ssh_user }}"
        node_passwd: "{{ hostvars[item].ansible_ssh_pass }}"
        thumbprint: "{{ hostvars[item].sslthumb[0] }}"
        os_type: "ESXI"
        os_version: "6.5.0"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      with_items: "{{ groups['nsxtransportnodes'] }}"
      register: fnode
      async: 7200
      poll: 0

    - name: Check Fabric Node Status
      async_status: jid={{ item.ansible_job_id }}
      register: job_result
      until: job_result.finished
      with_items: "{{ fnode.results }}"
      retries: 50

    - name: NSX-T Transport Node
      nsxt_transport_node:
        display_name: "{{ item }}"
        node_name: "{{ item }}"
        static_ip_pool_id: "{{ tepippool.id }}"
        host_switch_name:
          - "{{ hostvars['localhost'].overlay_hostswitch }}"
        transport_zone_endpoints:
          - "{{ hostvars['localhost'].overlay_tz_name }}"
        pnics: "{{ esxi_uplink_vmnics }}"
        uplink_profile: "{{ hostvars['localhost'].esxi_overlay_profile_name }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      with_items: "{{ groups['nsxtransportnodes'] }}"
      register: tnode
