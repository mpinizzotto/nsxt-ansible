---
- name: Deploy NSX-T OVAs
  hosts: localhost
  gather_facts: False
  vars_files:
    - ./answerfile.yml
  tasks:
    - name: deploy NSX Managers
      deploy_ova:
        ovftool_path: "{{ ovfToolPath }}"
        datacenter: "{{ deployDataCenterName }}"
        datastore: "{{ deployMgmtDatastoreName}}"
        portgroup: "{{ deployMgmtPortGroup }}"
        cluster: "{{ deployCluster }}"
        vmname: "{{ item.value.vmName }}"
        hostname: "{{ item.value.hostname }}"
        dns_server: "{{ deployMgmtDnsServer }}"
        dns_domain: "{{ deployMgmtDnsDomain }}"
        ntp_server: "{{ deployNtpServers }}"
        gateway: "{{ deployMgmtDefaultGateway }}"
        ip_address: "{{ item.value.ipAddress }}"
        netmask: "{{ deployMgmtNetmask }}"
        admin_password: "{{ nsxAdminPass }}"
        cli_password: "{{ nsxCliPass }}"
        ssh_enabled: "{{ sshEnabled }}"
        allow_ssh_root_login: "{{ allowSSHRootAccess }}"
        path_to_ova: "{{ nsxOvaPath }}"
        ova_file: "{{ item.value.ovaFile }}"
        vcenter: "{{ deployVcIPAddress }}"
        vcenter_user: "{{ deployVcUser }}"
        vcenter_passwd: "{{ deployVcPassword }}"
      with_dict: "{{ managers }}"
      async: 7200
      poll: 0
      register: deploy_nsx_man
    - name: Wait 4 minutes before start deploying controllers
      pause: minutes=4
    - name: deploy NSX Controllers
      deploy_ova:
        ovftool_path: "{{ ovfToolPath }}"
        datacenter: "{{ deployDataCenterName }}"
        datastore: "{{ deployMgmtDatastoreName}}"
        portgroup: "{{ deployMgmtPortGroup }}"
        cluster: "{{ deployCluster }}"
        vmname: "{{ item.value.vmName }}"
        hostname: "{{ item.value.hostname }}"
        dns_server: "{{ deployMgmtDnsServer }}"
        dns_domain: "{{ deployMgmtDnsDomain }}"
        ntp_server: "{{ deployNtpServers }}"
        gateway: "{{ deployMgmtDefaultGateway }}"
        ip_address: "{{ item.value.ipAddress }}"
        netmask: "{{ deployMgmtNetmask }}"
        admin_password: "{{ nsxAdminPass }}"
        cli_password: "{{ nsxCliPass }}"
        ssh_enabled: "{{ sshEnabled }}"
        allow_ssh_root_login: "{{ allowSSHRootAccess }}"
        path_to_ova: "{{ nsxOvaPath }}"
        ova_file: "{{ item.value.ovaFile }}"
        vcenter: "{{ deployVcIPAddress }}"
        vcenter_user: "{{ deployVcUser }}"
        vcenter_passwd: "{{ deployVcPassword }}"
      with_dict: "{{ controllers }}"
      async: 7200
      poll: 0
      register: deploy_nsx_ctrl
    - name: Wait 3 minutes before start deploying Edges
      pause: minutes=3
    - name: deploy NSX Gw OVA
      deploy_ova:
        ovftool_path: "{{ ovfToolPath }}"
        datacenter: "{{ deployDataCenterName }}"
        datastore: "{{ deployMgmtDatastoreName}}"
        portgroup: "{{ deployMgmtPortGroup }}"
        portgroup_ext: "{{ item.value.portgroupExt }}"
        portgroup_transport: "{{ item.value.portgroupTransport }}"
        cluster: "{{ deployCluster }}"
        vmname: "{{ item.value.vmName }}"
        hostname: "{{ item.value.hostname }}"
        dns_server: "{{ deployMgmtDnsServer }}"
        dns_domain: "{{ deployMgmtDnsDomain }}"
        ntp_server: "{{ deployNtpServers }}"
        gateway: "{{ deployMgmtDefaultGateway }}"
        ip_address: "{{ item.value.ipAddress }}"
        netmask: "{{ deployMgmtNetmask }}"
        admin_password: "{{ nsxAdminPass }}"
        cli_password: "{{ nsxCliPass }}"
        ssh_enabled: "{{ sshEnabled }}"
        allow_ssh_root_login: "{{ allowSSHRootAccess }}"
        path_to_ova: "{{ nsxOvaPath }}"
        ova_file: "{{ item.value.ovaFile }}"
        vcenter: "{{ deployVcIPAddress }}"
        vcenter_user: "{{ deployVcUser }}"
        vcenter_passwd: "{{ deployVcPassword }}"
      with_dict: "{{ edges }}"
      async: 7200
      poll: 0
      register: deploy_nsx_edges
    - name: Wait 5 minutes before start verifying the deployment
      pause: minutes=5
    - name: Check if NSX Managers deployment has finished
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ deploy_nsx_man.results }}"
      retries: 100
    - name: Check if NSX Controllers deployment has finished
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ deploy_nsx_ctrl.results }}"
      retries: 100
    - name: Check if NSX Edges deployment has finished
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ deploy_nsx_edges.results }}"
      retries: 100


